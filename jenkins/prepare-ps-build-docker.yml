- job:
    name: prepare-ps-build-docker
    project-type: pipeline
    description: |
        Prepare docker images for PS builds.
        upload to https://hub.docker.com/r/perconalab/ps-build/
        Do not edit this job through the web!
    disabled: false
    concurrent: false
    properties:
    - build-discarder:
        days-to-keep: -1
        num-to-keep: 10
        artifact-days-to-keep: -1
        artifact-num-to-keep: 10
    dsl: |
        void build(String SOURCE_IMAGE) {
            sh """
                sg docker -c "
                    ./docker/prepare-docker ${SOURCE_IMAGE}
                "
            """
            withCredentials([usernamePassword(credentialsId: 'hub.docker.com', passwordVariable: 'PASS', usernameVariable: 'USER')]) {
                sh """
                    SOURCE_IMAGE=${SOURCE_IMAGE}
                    sg docker -c "
                        docker login -u '${USER}' -p '${PASS}'
                        docker push perconalab/ps-build:\${SOURCE_IMAGE//[:\\/]/-}
                    "
                """
            }
        }
        pipeline {
            agent {
                label 'docker-32gb'
            }
            options {
                compressBuildLog()
                skipStagesAfterUnstable()
                buildDiscarder(logRotator(artifactNumToKeepStr: '10'))
            }
            stages {
                stage('Prepare') {
                    steps {
                        git poll: true, branch: '5.7', url: 'https://github.com/Percona-Lab/ps-build'
                        sh '''
                            git reset --hard
                            git clean -xdf
                        '''
                    }
                }
                stage('Build') {
                    steps {
                        parallel(
                            "centos:6":       { build('centos:6') },
                            "centos:7":       { build('centos:7') },
                            "i386/centos:6":  { build('i386/centos:6') },
                            "ubuntu:xenial":  { build('ubuntu:xenial') },
                            "ubuntu:bionic":  { build('ubuntu:bionic') },
                            "debian:stretch": { build('debian:stretch') },
                        )
                    }
                }
            }
        }
