#!/bin/bash

set -o errexit
set -o xtrace

DOWNLOAD_ROOT=/tmp/source_downloads
wget_loop() {
    local FILE="$1"
    local URL="$2"

    mkdir -p "${DOWNLOAD_ROOT}"
    until wget --progress=dot:giga -O "${DOWNLOAD_ROOT}/${FILE}" "${URL}"; do
        echo "sleep before retry"
        sleep 1
    done
}

if [ -f /usr/bin/yum ]; then
    until yum -y update; do
        yum clean all
        echo "waiting"
        sleep 1
    done

    until yum -y install wget epel-release; do
        echo "waiting"
        sleep 1
    done

    PKGLIST=" \
        gcc-c++ gperf ncurses-devel perl readline-devel openssl-devel jemalloc unzip \
        time zlib-devel libaio-devel bison cmake pam-devel jemalloc-devel valgrind \
        perl-Time-HiRes libcurl-devel openldap-devel perl-Env perl-Data-Dumper \
        perl-JSON MySQL-python perl-Digest perl-Digest-MD5 perl-Digest-Perl-MD5 \
        numactl-devel git which make rpm-build ccache libtool redhat-lsb-core sudo libasan \
    "
    if [[ "$(rpm --eval %rhel)" = "6" ]]; then
        cat <<-EOF | tee /etc/yum.repos.d/devtoolset-2.repo
		[devtoolset-2]
		name=devtoolset-2
		baseurl=http://linuxsoft.cern.ch/cern/devtoolset/slc6X/\$basearch/yum/devtoolset/
		gpgkey=http://linuxsoft.cern.ch/cern/slc6X/\$basearch/RPM-GPG-KEY-cern
		gpgcheck=1
	EOF
        PKGLIST=${PKGLIST/ gcc-c++/ devtoolset-2-gcc-c++ devtoolset-2-binutils}
        PKGLIST=${PKGLIST/ valgrind/ devtoolset-2-valgrind}
    fi

    until yum -y install ${PKGLIST}; do
        echo "waiting"
        sleep 1
    done
    yum -y clean all
fi

if [ -f /usr/bin/apt-get ]; then
    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    until apt-get -y install lsb-release gnupg wget bc; do
        sleep 1
        echo "waiting"
    done

    DIST=$(lsb_release -sc)
    echo "deb http://jenkins.percona.com/apt-repo/ ${DIST} main" > /etc/apt/sources.list.d/percona-dev.list
    wget -q -O - http://jenkins.percona.com/apt-repo/8507EFA5.pub | apt-key add -
    wget -q -O - http://jenkins.percona.com/apt-repo/CD2EFD2A.pub | apt-key add -

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    PKGLIST=" \
        curl bison cmake perl gcc g++ libaio-dev libldap2-dev libwrap0-dev gdb unzip gawk \
        libmecab-dev libncurses5-dev libreadline-dev libpam-dev zlib1g-dev \
        libnuma-dev libjemalloc-dev libc6-dbg valgrind libjson-perl python-mysqldb \
        libmecab2 mecab mecab-ipadic git autoconf libgsasl7 libsasl2-dev libsasl2-modules devscripts \
        debconf debhelper fakeroot po-debconf psmisc ccache libtool sudo \
    "

    if [[ $(echo "$(lsb_release -r -s) > 18.0" | bc -l) == 1 ]] && [[ $(lsb_release -i -s) == Ubuntu ]]; then
        PKGLIST+=" libasan5"
    fi

    if [[ $(lsb_release -sc)  = cosmic ]]; then
        PKGLIST+=' libssl1.0-dev libcurl4-gnutls-dev'
    else
       PKGLIST+=' libssl-dev libcurl4-openssl-dev'
    fi

    until apt-get -y install ${PKGLIST}; do
        echo "waiting"
        sleep 1
    done
    apt-get -y clean
fi

if [ ! -f /usr/local/lib/libeatmydata.so ]; then
    git clone https://github.com/stewartsmith/libeatmydata /tmp/libeatmydata
    pushd /tmp/libeatmydata
        autoreconf --force --install
        ./configure
        make
        make install
    popd
    rm -rf /tmp/libeatmydata
fi

# boost 1.59.0 needed for percona-server 5.7
wget_loop 'boost_1_59_0.tar.gz' 'http://downloads.sourceforge.net/boost/boost/1.59.0/boost_1_59_0.tar.gz'

# boost 1.66.0 needed for percona-server 8.0
wget_loop 'boost_1_66_0.tar.gz' 'http://downloads.sourceforge.net/boost/boost/1.66.0/boost_1_66_0.tar.gz'

# googletest 1.8.0 needed for percona-server 5.7
wget_loop 'googletest-release-1.8.0.zip' 'https://github.com/google/googletest/archive/release-1.8.0.zip'
