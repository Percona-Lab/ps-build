#!/bin/bash
#
set -o xtrace
set -o errexit
#
DOWNLOAD_ROOT=/tmp/source_downloads
wget_loop() {
    local FILE="$1"
    local URL="$2"

    mkdir -p "${DOWNLOAD_ROOT}"
    until wget --progress=dot:giga -O "${DOWNLOAD_ROOT}/${FILE}" "${URL}"; do
        echo "sleep before retry"
        sleep 1
    done
}

build_openssl(){
    OPENSSL_VERSION=1.1.1w
    rm -rf openssl-${OPENSSL_VERSION}* || true
    cd /tmp
    wget https://www.openssl.org/source/old/1.1.1/openssl-${OPENSSL_VERSION}.tar.gz
    tar -xzf openssl-${OPENSSL_VERSION}.tar.gz
    cd openssl-${OPENSSL_VERSION}
    ./Configure --prefix=/usr --openssldir=/usr linux-x86_64
    make
    make install
}

#
if [ -f /usr/bin/yum ]; then
  RHVER="$(rpm --eval %rhel)"
  DIST="$(rpm --eval %dist)"
  rpm --eval %_arch > /etc/yum/vars/basearch

  if grep -q 'CentOS.* 8\.' /etc/redhat-release; then
      sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
      sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
  fi

  until yum -y update; do
    yum clean all
    echo "waiting"
    sleep 1
  done

  PKGLIST+=" wget"

  if [[ "x${DIST}" == "x.amzn2" ]]; then
      until amazon-linux-extras install epel -y; do
        echo "waiting"
        sleep 1
      done
  else
      until yum -y install epel-release; do
        echo "waiting"
        sleep 1
      done
  fi

  if [[ ${RHVER} -eq 7 ]]; then
      # installing EndPoint repo to get 'git' 2.x.x package
      until yum -y install ${PKGLIST} ; do
        echo "waiting"
        sleep 1
      done
      wget_loop 'endpoint-repo.x86_64.rpm' 'https://packages.endpointdev.com/rhel/7/os/x86_64/endpoint-repo.x86_64.rpm'
      yum -y install ${DOWNLOAD_ROOT}/endpoint-repo.x86_64.rpm
      if [[ "x${DIST}" == "x.amzn2" ]]; then
          sed -i 's/$releasever/7/g' /etc/yum.repos.d/endpoint.repo
      fi
      rm -f ${DOWNLOAD_ROOT}/endpoint-repo.x86_64.rpm
  fi

  if [[ ${RHVER} -eq 8 ]]; then
      PKGLIST+=" dnf-utils"
      until yum -y install ${PKGLIST} ; do
        echo "waiting"
        sleep 1
      done

      dnf config-manager --set-enabled powertools epel-playground
      PKGLIST+=" libedit-devel"
  fi

  if [[ ${RHVER} -eq 9 ]]; then
      PKGLIST+=" dnf-utils"
      until yum -y install ${PKGLIST} ; do
        echo "waiting"
        sleep 1
      done

      dnf config-manager --enable ol9_codeready_builder
      PKGLIST+=" libedit-devel"
  fi

  if [[ ${RHVER} -lt 8 ]] && [[ "$(rpm --eval %{_arch})" == "x86_64" ]] && [[ "x${DIST}" != "x.amzn2" ]]; then
    until yum -y install centos-release-scl; do
      echo "waiting"
      sleep 1
    done
  elif [[ "x${DIST}" == "x.amzn2" ]]; then
    yum -y install http://mirror.centos.org/centos/7/os/x86_64/Packages/scl-utils-20130529-19.el7.x86_64.rpm \
                   http://mirror.centos.org/centos/7/os/x86_64/Packages/scl-utils-build-20130529-19.el7.x86_64.rpm \
                   http://mirror.centos.org/centos/7/extras/x86_64/Packages/centos-release-scl-rh-2-3.el7.centos.noarch.rpm \
                   http://mirror.centos.org/centos/7/extras/x86_64/Packages/centos-release-scl-2-3.el7.centos.noarch.rpm || true
  fi
  until yum -y install ${PKGLIST}; do
    echo "waiting"
    sleep 1
  done

  if [[ ${RHVER} -eq 8 ]]; then
      dnf config-manager --set-enabled powertools epel-playground
  fi

  PKGLIST=" \
    gcc-c++ libtool gperf ncurses-devel perl readline-devel jemalloc zip unzip tar gzip \
    time zlib-devel libaio-devel bison cmake pam-devel jemalloc-devel valgrind \
    perl-Time-HiRes openldap-devel perl-Env perl-Data-Dumper libicu-devel perl-Sys-MemInfo \
    cpio perl-JSON perl-Digest perl-Digest-MD5 \
    numactl-devel git which make rpm-build ccache sudo libasan lz4-devel \
    libzstd-devel tzdata zstd mysql-devel perl-DBI perl-DBD-mysql jq perl-XML-Simple libcurl-devel perl-Test-Simple \
    cyrus-sasl-devel cyrus-sasl-scram krb5-devel libudev-devel python3-pip python3-devel libevent-devel \
    "
  if [[ "x${DIST}" != "x.amzn2" ]]; then
      PKGLIST+=" openssl-devel openssl "
  fi

    if [[ ${RHVER} -eq 9 ]]; then
        PKGLIST+=" gflags-devel util-linux libtirpc-devel rpcgen"
    fi

    if [[ ${RHVER} -lt 9 ]]; then
        if [[ ${RHVER} -eq 8 ]]; then
            PKGLIST+=" python3-mysql"
        else
            PKGLIST+=" MySQL-python"
        fi
        PKGLIST+=" redhat-lsb-core"
    fi

    if [[ ${RHVER} -eq 8 ]] || [[ ${RHVER} -eq 9 ]]; then
        # Next packages are required by 8.0.33
        PKGLIST_DEVTOOLSET12+=" gcc-toolset-12-gcc gcc-toolset-12-gcc-c++ gcc-toolset-12-binutils"
        PKGLIST_DEVTOOLSET12+=" gcc-toolset-12-annobin-annocheck gcc-toolset-12-annobin-plugin-gcc"
    fi

    if [[ ${RHVER} -eq 8 ]]; then
        PKGLIST+=" lz4 perl-Memoize perl-open valgrind-devel libubsan rpcgen libtirpc-devel golang libunwind-devel python2 python3 libatomic"
        PKGLIST_DEVTOOLSET10+=" gcc-toolset-10-gcc-c++ gcc-toolset-10-binutils gcc-toolset-10-annobin"
        PKGLIST_DEVTOOLSET10+=" gcc-toolset-10-valgrind gcc-toolset-10-valgrind-devel gcc-toolset-10-libatomic-devel"
        PKGLIST_DEVTOOLSET10+=" gcc-toolset-10-libasan-devel gcc-toolset-10-libubsan-devel"

        # Next packages are required by 8.0.29
        PKGLIST_DEVTOOLSET11+=" gcc-toolset-11-gcc-c++ gcc-toolset-11-binutils gcc-toolset-11-annobin"
        PKGLIST_DEVTOOLSET11+=" gcc-toolset-11-valgrind gcc-toolset-11-valgrind-devel gcc-toolset-11-libatomic-devel"
        PKGLIST_DEVTOOLSET11+=" gcc-toolset-11-libasan-devel gcc-toolset-11-libubsan-devel"
    fi

    if [[ ${RHVER} -eq 7 ]]; then
        PKGLIST+=" go-toolset-7 libunwind-devel httpd24-curl"
        if [[ "x${DIST}" != "x.amzn2" ]]; then
            PKGLIST+=" openssl11 openssl11-devel"
        fi
        PKGLIST_DEVTOOLSET10+=" devtoolset-10-gcc-c++ devtoolset-10-binutils"
        PKGLIST_DEVTOOLSET10+=" devtoolset-10-valgrind devtoolset-10-valgrind-devel devtoolset-10-libatomic-devel"
        PKGLIST_DEVTOOLSET10+=" devtoolset-10-libasan-devel devtoolset-10-libubsan-devel"

        # Next packages are required by 8.0.29
        PKGLIST_DEVTOOLSET11+=" devtoolset-11-gcc-c++ devtoolset-11-binutils"
        PKGLIST_DEVTOOLSET11+=" devtoolset-11-valgrind devtoolset-11-valgrind-devel devtoolset-11-libatomic-devel"
        PKGLIST_DEVTOOLSET11+=" devtoolset-11-libasan-devel devtoolset-11-libubsan-devel"
    fi

# Percona-Server

#   Percona-Server 8.0
    if [[ ${RHVER} -lt 8 ]]; then
        if [[ "x${DIST}" != "x.amzn2" ]]; then
            PKGLIST+=" devtoolset-7-gcc-c++ devtoolset-7-binutils"
            PKGLIST+=" devtoolset-7-libasan-devel devtoolset-7-libubsan-devel"
            PKGLIST+=" devtoolset-7-valgrind devtoolset-7-valgrind-devel devtoolset-7-libatomic-devel"
        else
            PKGLIST+=" binutils valgrind-devel "
        fi
        PKGLIST+=" cmake3 boost-devel"
        PKGLIST+=" devtoolset-8-gcc-c++ devtoolset-8-binutils"
        PKGLIST+=" devtoolset-8-libasan-devel devtoolset-8-libubsan-devel"
        PKGLIST+=" devtoolset-8-valgrind devtoolset-8-valgrind-devel devtoolset-8-libatomic-devel perl-Digest-Perl-MD5 libedit-devel"
    fi

    until yum -y install ${PKGLIST} ; do
        echo "waiting"
        sleep 1
    done

    if [[ ${RHVER} -eq 7 ]]; then
        until yum -y --enablerepo=centos-sclo-rh-testing install ${PKGLIST_DEVTOOLSET10} ${PKGLIST_DEVTOOLSET11}; do
            echo "waiting"
            sleep 1
        done
    elif [[ ${RHVER} -eq 8 ]]; then
        yum -y install centos-release-stream
        sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*
        sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
        until yum -y install ${PKGLIST_DEVTOOLSET10} ${PKGLIST_DEVTOOLSET11} ${PKGLIST_DEVTOOLSET12}; do
            echo "waiting"
            sleep 1
        done
        yum -y remove centos-release-stream
    elif [[ ${RHVER} -eq 9 ]]; then
        until yum -y install ${PKGLIST_DEVTOOLSET12}; do
            echo "waiting"
            sleep 1
        done
    fi

    if [[ ${RHVER} -eq 8 ]] || [[ ${RHVER} -eq 9 ]]; then
        ln -fs /usr/bin/python3 /usr/bin/python
    fi

    if [[ "x${DIST}" == "x.amzn2" ]]; then
        build_openssl
    fi

    # Install mysqlclient by pip as there's no candidate in repositories
    if [[ ${RHVER} -eq 7 ]] && [[ "x${DIST}" != "x.amzn2" ]]; then
        source /opt/rh/devtoolset-7/enable
    fi
    pip3 install mysqlclient

#   this is workaround for https://bugs.mysql.com/bug.php?id=95222 as soon as the issue is fixed we need to remove it 
    if [ -f '/anaconda-post.log' ]; then
        rm /anaconda-post.log
    fi
fi

if [ -f /usr/bin/apt-get ]; then
    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    until apt-get -y install lsb-release gnupg wget bc; do
        sleep 1
        echo "waiting"
    done

    DIST=$(lsb_release -sc)

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    PKGLIST=" \
        curl bison cmake perl libssl-dev gcc g++ libaio-dev libldap2-dev libwrap0-dev gdb zip unzip gawk \
        libmecab-dev libncurses5-dev libreadline-dev libpam-dev zlib1g-dev libcurl4-openssl-dev \
        libnuma-dev libjemalloc-dev libc6-dbg valgrind libjson-perl libevent-dev pkg-config \
        libmecab2 mecab mecab-ipadic git autoconf libsasl2-dev libsasl2-modules devscripts \
        debconf debhelper fakeroot po-debconf psmisc ccache libtool sudo liblz4-dev liblz4-tool libedit-dev libssl-dev \
        tzdata golang libunwind-dev zstd python3-mysqldb libdbi-perl libdbd-mysql-perl \
        cpio jq openssl libxml-simple-perl \
        libsasl2-dev libsasl2-modules-gssapi-mit libkrb5-dev libudev-dev libzstd-dev libsys-meminfo-perl \
    "

    if [[ ${DIST} == "bookworm" ]] || [[ ${DIST} == "noble" ]]; then
        PKGLIST+=" gsasl-common"
    else
        PKGLIST+=" libgsasl7"
    fi

    # PS 8.2 requires gcc-10 on focal
    if [[ ${DIST} == "focal" ]]; then
        PKGLIST+=" gcc-10 g++-10"
    fi

    # PS-7834: 8.0.26 requires GCC 8 on bionic
    if [[ ${DIST} == "bionic" ]]; then
        PKGLIST+=" gcc-8 g++-8"
    fi

    if [[ ${DIST} == 'jammy' ]] || [[ ${DIST} == 'bullseye' ]] || [[ ${DIST} == 'bookworm' ]] || [[ ${DIST} == "noble" ]]; then
        PKGLIST+=" libgflags-dev util-linux"
    fi

    if [[ ${DIST} == "noble" ]]; then
        PKGLIST+=" libtirpc-dev"
    fi

    until apt-get -y install ${PKGLIST}; do
        echo "waiting"
        sleep 1
    done

    apt-get -y clean

    if [[ -L /usr/bin/python ]]; then
        rm /usr/bin/python
    fi
    ln -fs /usr/bin/python3 /usr/bin/python
fi

if [ ! -f /usr/local/lib/libeatmydata.so ]; then
    git clone https://github.com/stewartsmith/libeatmydata /tmp/libeatmydata
    pushd /tmp/libeatmydata
        autoreconf --force --install
        ./configure
        make
        make install
    popd
    rm -rf /tmp/libeatmydata
fi

# getting rid of the "fatal: detected dubious ownership in repository at ..." error
sudo git config --system --add safe.directory '*'

# PS-7159 remove localhost from ipv6 
sed -re "s/^(::1.*)\slocalhost\b(.*)$/\1 \2/g" /etc/hosts 1<> /etc/hosts

# NB: resulting docker image will be used for building all branches: 5.6, 5.7, 8.0
# boost 1.59.0 needed for percona-server 5.7
wget_loop 'boost_1_59_0.tar.gz' 'http://downloads.sourceforge.net/boost/boost/1.59.0/boost_1_59_0.tar.gz'

# boost 1.77.0 needed for percona-server 8.0
wget_loop 'boost_1_77_0.tar.bz2' 'http://downloads.sourceforge.net/boost/boost/1.77.0/boost_1_77_0.tar.bz2'

# googletest 1.8.0 needed for percona-server versions 5.6 and 5.7
wget_loop 'googletest-release-1.8.0.zip' 'https://github.com/google/googletest/archive/release-1.8.0.zip'
