#!/bin/bash
#
set -o xtrace
set -o errexit
#
DOWNLOAD_ROOT=/tmp/source_downloads
wget_loop() {
    local FILE="$1"
    local URL="$2"

    mkdir -p "${DOWNLOAD_ROOT}"
    until wget --progress=dot:giga -O "${DOWNLOAD_ROOT}/${FILE}" "${URL}"; do
        echo "sleep before retry"
        sleep 1
    done
}
#
if [ -f /usr/bin/yum ]; then
  RHVER="$(rpm --eval %rhel)"
  rpm --eval %_arch > /etc/yum/vars/basearch

  if [[ ${RHVER} -eq 8 ]]; then
    # disable subscription warning on RHEL8 Beta
    echo -e '[main]\nenabled=0\n' > /etc/yum/pluginconf.d/subscription-manager.conf
    # disable strict yum/dnf behaviour
    echo 'strict=0' >> /etc/dnf/dnf.conf
    echo 'strict=0' >> /etc/yum/yum.conf
    # download repo files
    wget -O /etc/yum.repos.d/rhel8-beta.repo https://jenkins.percona.com/yum-repo/rhel8/rhel8-beta.repo
    wget -O /etc/yum.repos.d/percona-dev.repo https://jenkins.percona.com/yum-repo/percona-dev.repo
    RH8PKGS="rpcgen libtirpc-devel"
  fi

  PKGLIST+=" wget"

  if [[ ${RHVER} -lt 8 ]]; then
    PKGLIST+=" epel-release centos-release-scl"
  fi
#
  until yum -y install ${PKGLIST}; do
    echo "waiting"
    sleep 1
  done
#
  until yum -y update; do
    yum clean all
    echo "waiting"
    sleep 1
  done
#

  PKGLIST=" \
    gcc-c++ gperf ncurses-devel perl readline-devel openssl-devel jemalloc unzip \
    time zlib-devel libaio-devel bison cmake pam-devel jemalloc-devel valgrind re2-devel \
    perl-Time-HiRes openldap-devel perl-Env perl-Data-Dumper libicu-devel perl-Sys-MemInfo \
    perl-JSON MySQL-python perl-Digest perl-Digest-MD5 perl-Digest-Perl-MD5 \
    numactl-devel git which make rpm-build ccache libtool redhat-lsb-core sudo lz4-devel \
    libzstd-devel libedit-devel \
    "

    if [[ ${RHVER} -eq 8 ]]; then
        PKGLIST+=" lz4 perl-Memoize perl-open valgrind-devel libubsan"
    fi

# Percona-Server
    if [[ ${RHVER} -eq 7 ]]; then
        PKGLIST+=" libasan4"
    fi

    if [[ ${RHVER} -eq 6 ]]; then
        wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo
        wget -O /etc/pki/rpm-gpg/RPM-GPG-KEY-cern https://raw.githubusercontent.com/cms-sw/cms-docker/master/slc6-vanilla/RPM-GPG-KEY-cern
        PKGLIST+=" devtoolset-2-gcc-c++ devtoolset-2-binutils"
        PKGLIST+=" devtoolset-2-libasan-devel"
        PKGLIST+=" devtoolset-2-valgrind devtoolset-2-valgrind-devel"
        PKGLIST+=" libevent2-devel libasan"
    fi
    #
    if [[ ${RHVER} -gt 6 ]]; then
        PKGLIST+=" libevent-devel libcurl-devel"
    fi
    #
#   Percona-Server 8.0
    if [[ ${RHVER} -lt 8 ]]; then
        PKGLIST+=" devtoolset-7-gcc-c++ devtoolset-7-binutils cmake3"
        PKGLIST+=" devtoolset-7-libasan-devel devtoolset-7-libubsan-devel"
        PKGLIST+=" devtoolset-7-valgrind devtoolset-7-valgrind-devel"
        PKGLIST+=" devtoolset-8-gcc-c++ devtoolset-8-binutils"
        PKGLIST+=" devtoolset-8-libasan-devel devtoolset-8-libubsan-devel"
        PKGLIST+=" devtoolset-8-valgrind devtoolset-8-valgrind-devel"
    fi
#
    until yum -y install ${PKGLIST} ${RH8PKGS:-} ; do
        echo "waiting"
        sleep 1
    done

    # FIXME. WORKAROUND. it's needed for libeatmydata.
    # FIXME. it's already installed, but some files are missing for some reason
    [[ ${RHVER} -eq 8 ]] && yum -y reinstall kernel-headers

    yum -y clean all

#   this is workaround for https://bugs.mysql.com/bug.php?id=95222 as soon as the issue is fixed we need to remove it 
    if [ -f '/anaconda-post.log' ]; then
        rm /anaconda-post.log
    fi
fi
#
if [ -f /usr/bin/apt-get ]; then
    echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    until apt-get -y install lsb-release gnupg wget bc; do
        sleep 1
        echo "waiting"
    done

    DIST=$(lsb_release -sc)
    echo "deb http://jenkins.percona.com/apt-repo/ ${DIST} main" > /etc/apt/sources.list.d/percona-dev.list
    wget -q -O - http://jenkins.percona.com/apt-repo/8507EFA5.pub | apt-key add -
    wget -q -O - http://jenkins.percona.com/apt-repo/CD2EFD2A.pub | apt-key add -

    until apt-get update; do
        sleep 1
        echo "waiting"
    done

    PKGLIST=" \
        curl bison cmake perl libssl-dev gcc g++ libaio-dev libldap2-dev libwrap0-dev gdb unzip gawk \
        libmecab-dev libncurses5-dev libreadline-dev libpam-dev zlib1g-dev libcurl4-openssl-dev \
        libnuma-dev libjemalloc-dev libc6-dbg valgrind libjson-perl python-mysqldb libevent-dev pkg-config \
        libmecab2 mecab mecab-ipadic git autoconf libgsasl7 libsasl2-dev libsasl2-modules devscripts \
        debconf debhelper fakeroot po-debconf psmisc ccache libtool sudo liblz4-dev liblz4-tool libedit-dev libssl-dev \
    "

    DISTRIBUTOR_ID=$(lsb_release -i -s)
    RELEASE=$(lsb_release -r -s)
    if [[ ${DISTRIBUTOR_ID} == Ubuntu ]] && [[ $(echo "${RELEASE} >= 18.0" | bc -l) == 1 ]]; then
        PKGLIST+=" libasan5"
    fi

    if [[ ${RELEASE} > "16.0" ]]; then
        PKGLIST+=" libre2-dev"
    fi

    # On Ubuntu install zstd/libsys-meminfo-perl only for Xenial (16.X) and higher
    if [[ ${DISTRIBUTOR_ID} == Ubuntu ]] && [[ $(echo "${RELEASE} >= 16.0" | bc -l) == 1 ]]; then
        PKGLIST+=" libsys-meminfo-perl"

        if [[ $(echo "${RELEASE} >= 18.0" | bc -l) == 1 ]]; then
            # libzstd-dev for Bionic and higher
            PKGLIST+=" libzstd-dev"
        else
            # libzstd1-dev for Xenial
            PKGLIST+=" libzstd1-dev"
        fi
    fi

    # On Debian install zstd/perl-Sys-MemInfo only for Stretch (9.X) and higher
    if [[ ${DISTRIBUTOR_ID} == Debian ]] && [[ $(echo "${RELEASE} >= 9.0" | bc -l) == 1 ]]; then
        PKGLIST+=" libzstd-dev libsys-meminfo-perl"
    fi

    # For Debian buster install libre2-dev
    if [[ ${DISTRIBUTOR_ID} == Debian ]] && [[ $(echo "${RELEASE} >= 10" | bc -l) == 1 ]]; then
        PKGLIST+=" libre2-dev"
    fi

    until apt-get -y install ${PKGLIST}; do
        echo "waiting"
        sleep 1
    done

    apt-get -y clean
fi

if [ ! -f /usr/local/lib/libeatmydata.so ]; then
    git clone https://github.com/stewartsmith/libeatmydata /tmp/libeatmydata
    pushd /tmp/libeatmydata
        autoreconf --force --install
        ./configure
        make
        make install
    popd
    rm -rf /tmp/libeatmydata
fi

# NB: resulting docker image will be used for building all branches: 5.6, 5.7, 8.0
# boost 1.59.0 needed for percona-server 5.7
wget_loop 'boost_1_59_0.tar.gz' 'http://downloads.sourceforge.net/boost/boost/1.59.0/boost_1_59_0.tar.gz'

# boost 1.67.0 needed for percona-server 8.0
wget_loop 'boost_1_67_0.tar.gz' 'http://downloads.sourceforge.net/boost/boost/1.67.0/boost_1_67_0.tar.gz'

# googletest 1.8.0 needed for percona-server versions 5.6 to 8.0
wget_loop 'googletest-release-1.8.0.zip' 'https://github.com/google/googletest/archive/release-1.8.0.zip'
