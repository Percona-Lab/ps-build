#!/bin/bash
#
# Execute this tool to test binary releases
#
#  possible jenkins vars:
#      CMAKE_BUILD_TYPE = (RelWithDebInfo Debug)
#      ANALYZER_OPTS = (-DWITH_ASAN=ON -DWITH_ASAN_SCOPE=ON -DWITH_MSAN=ON -DWITH_UBSAN=ON -DWITH_VALGRIND=ON)
#      DEFAULT_TESTING = (yes no)
#      MTR_ARGS
#      MTR_REPEAT

set -o errexit
set -o xtrace

WORKDIR_ABS=$(cd ${1:-./build}; pwd -P)
mkdir -p ${WORKDIR_ABS}/PS
tar -C ${WORKDIR_ABS}/PS --strip-components=1 -zxpf $(ls $WORKDIR_ABS/*.tar.gz | head -1)
cd ${WORKDIR_ABS}/PS/mysql-test

if [[ "${CMAKE_BUILD_TYPE}" = "Debug" ]]; then
    MTR_ARGS+=" --debug-server"
fi
if [[ "${ANALYZER_OPTS}" == *WITH_VALGRIND=ON* ]]; then
    MTR_ARGS+=" --valgrind --valgrind-option=--leak-check=full --valgrind-option=--show-leak-kinds=all"
elif [[ "${ANALYZER_OPTS}" == *WITH_ASAN=ON* ]]; then
    export ASAN_OPTIONS=allocator_may_return_null=true
    export LSAN_OPTIONS=verbosity=2:log_threads=1:log_pointers=1
else
    EATMYDATA=$(find /lib* /usr/lib* /usr/local/lib* -type f -name '*eatmyda*.so*' | head -n1)
    if [[ -z "${EATMYDATA}" ]]; then
        echo "No libeatmydata.so lib found"
        exit 1
    fi
fi

if [[ -n "${MTR_REPEAT}" ]]; then
    MTR_ARGS+=" --repeat=${MTR_REPEAT}"
fi

status=0

# Running MTR test cases
if [[ "${DEFAULT_TESTING}" != "no" ]]; then
	LD_PRELOAD="${EATMYDATA}" MTR_BUILD_THREAD=auto ./mysql-test-run.pl \
        --parallel=$(grep -c ^processor /proc/cpuinfo) \
        --result-file \
        ${MTR_ARGS} \
        --force \
        --max-test-fail=0 \
        --suite-timeout=9999 \
        --testcase-timeout=450 \
        | tee ${WORKDIR_ABS}/mtr.output \
        || status=$?
    awk 'BEGIN { print "<testsuite name=\"MySQL\">" } /^([[:alnum:]]+).*[\[] (retry-)?pass [\]](.*)/ { print "<testcase name=\""$1"\" time=\"" $6/1000 "\"/>" } /^(.*) .*\[ skipped \]/ { print "<testcase name=\""$1"\"><skipped/></testcase>" } /^(.*) .*\[ (retry-)?fail \]/ { print "<testcase name=\""$1"\"><failure/></testcase>" } /^MTR\47s internal check of the test case \47(.*)\47 failed/ { print "<testcase name=\"testcase-check-"$8"\"><failure/></testcase>" } END { print "</testsuite>" }' < ${WORKDIR_ABS}/mtr.output > $WORKDIR_ABS/junit.xml
fi

exit $status
